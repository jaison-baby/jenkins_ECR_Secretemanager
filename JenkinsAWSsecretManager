 pipeline {
    agent any
    
    environment {
        AWS_DEFAULT_REGION = sh (script: "aws secretsmanager get-secret-value --region us-east-2 --secret-id MyTestSecretlatestnew23 | jq -r .SecretString | jq -r .AWS_DEFAULT_REGION", returnStdout: true).trim()
        AWS_ACCOUNT_ID = sh (script: "aws secretsmanager get-secret-value --region us-east-2 --secret-id MyTestSecretlatestnew23 | jq -r .SecretString | jq -r .AWS_ACCOUNT_ID", returnStdout: true).trim()
        IMAGE_REPO_NAME = sh (script: "aws secretsmanager get-secret-value --region us-east-2 --secret-id MyTestSecretlatestnew23 | jq -r .SecretString | jq -r .IMAGE_REPO_NAME", returnStdout: true).trim()
        IMAGE_TAG = sh (script: "aws secretsmanager get-secret-value --region us-east-2 --secret-id MyTestSecretlatestnew23 | jq -r .SecretString | jq -r .IMAGE_TAG", returnStdout: true).trim()
    }
   
    stages {
        
         stage('Logging into AWS ECR') {
            steps {
                script {
            
                sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
                 
            }
        }
                    
              
    // Building Docker images
    stage('Building image') {
      steps{
        script {
          
          dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
        }
      }
    }
   
    // Uploading Docker images into AWS ECR
    stage('Pushing to ECR') {
     steps{  
         script {
                
                sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                sh "docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                sh "docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${IMAGE_TAG}"
         }
        }
      }
    }
}
